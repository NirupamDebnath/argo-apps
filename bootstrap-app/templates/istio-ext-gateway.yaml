{{ if and .Values.istioGateway.external.enabled (ne .Values.istioGateway.acmCertificate "") }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-ingressgateway-external
  # You'll usually want to add your resources to the argocd namespace.
  namespace: argocd
  # Add this finalizer ONLY if you want these to cascade delete.
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # The project the application belongs to.
  project: default
  # Source of the application manifests
  sources:
  - repoURL: https://istio-release.storage.googleapis.com/charts # Can point to either a Helm chart repo or a git repo.
    targetRevision: 1.23.2 # For Helm, this refers to the chart version.
    chart: gateway
    helm:
      releaseName: istio-ingressgateway-external
      values: |
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 100m
            memory: 128Mi
        autoscaling:
          minReplicas: 2
        replicaCount: 2
        labels:
          type: external
          cluster: demoeks1
          istio: istio-ingressgateway-external
          app: istio-ingressgateway-external
        annotations: 
          "service.beta.kubernetes.io/aws-load-balancer-type": "external"
          "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance"
          "service.beta.kubernetes.io/aws-load-balancer-scheme": "internet-facing"
          "service.beta.kubernetes.io/aws-load-balancer-healthcheck-path": "/healthz/ready"
          "service.beta.kubernetes.io/aws-load-balancer-subnets": {{ .Values.istioGateway.publicSubnets }}
          "service.beta.kubernetes.io/aws-load-balancer-name": {{ .Values.istioGateway.nlbName}}
          "service.beta.kubernetes.io/aws-load-balancer-ssl-cert": {{ .Values.istioGateway.acmCertificate }}
          "service.beta.kubernetes.io/aws-load-balancer-ssl-ports": "443"
          "service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy": "ELBSecurityPolicy-TLS13-1-0-2021-06"
          "service.beta.kubernetes.io/aws-load-balancer-manage-backend-security-group-rules": "true"
  #        "service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags": {{ .Values.istioGateway.tags}}
  # Destination cluster and namespace to deploy the application
  destination:
    server: https://kubernetes.default.svc
    # The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    namespace: istio-system
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
      - CreateNamespace=false # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
    # The retry feature is available since v1.7
    retry:
      limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
{{ end }}
